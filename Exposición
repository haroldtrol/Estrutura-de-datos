#include<iostream>
#include<stdlib.h>
#include<malloc.h>
using namespace std;
struct pago{
int pag=0;
pago *pagiz;
pago *pagoder;
pago *sig;
};
struct nodoraiz{
 pago *consultagen;
 pago *odontologia;
 pago *reconsulta;
};
struct paciente{
    int anho=0;
    paciente *izq;
    paciente*der;
    paciente*sig;
};
nodoraiz *raizz;
paciente *raiz,*aux, *aux2;
pago *auxx, *auxx2;
int pocisionar2(){
   if(auxx->pag<auxx2->pag){
    if(auxx2->pagiz!=NULL){
        auxx2=auxx2->pagiz;
        pocisionar2();
    }else
    auxx2->pagiz=auxx2;
}else if(auxx->pag>=auxx2->pag){
    if(auxx2->pagoder!=NULL){
        auxx2=auxx2->pagoder;
        pocisionar2();
    }else
    auxx2->pagoder=auxx;
    }
    return 0;
} 
int pocisionar(){
if(aux->anho<aux2->anho){
    if(aux2->izq!=NULL){
        aux2=aux2->izq;
        pocisionar();
    }else
    aux2->izq=aux;
}else if(aux->anho>=aux2->anho){
    if(aux2->der!=NULL){
        aux2=aux2->der;
        pocisionar();
    }else
    aux2->der=aux;
    }
    return 0;
}
int registrar_pago(){
int origen=0;
int valor1=14800, valor2=20000, valor3=25000;
    auxx = (struct pago*) malloc (sizeof(struct pago*));
    auxx->pagiz = auxx->pagoder = NULL;
    cout<<"¿Cual es el concepto de tu pago?"<<endl;
    cout<<"1. Consulta general =$14.800 "<<endl;
    cout<<"2. Odontologia = $20.000"<<endl;
    cout<<"3. Entrega de examenes (Re-consulta) = $25.000"<<endl;
    cin>>origen;
    cout<<"ingresa el valor a pagar: "<<endl;
    cin>>auxx->pag;
    if((auxx->pag==valor1)||(auxx->pag==valor2)||(auxx->pag==valor3)){
    if((origen==1)&&(raizz->consultagen==NULL)){
    raizz->consultagen = auxx;}else if
    ((origen==1)&&(raizz->consultagen!=NULL)){
    auxx2=raizz->consultagen;
    pocisionar2();
    }else if((origen==2)&&(raizz->odontologia==NULL)){
    raizz-> odontologia = auxx;}else if
    ((origen==2)&&(raizz->odontologia!=NULL)){
    auxx2=raizz->odontologia;
    pocisionar2();
    }else if((origen==3)&&(raizz->reconsulta==NULL)){
    raizz-> reconsulta = auxx;}else if
    ((origen==3)&&(raizz->reconsulta!=NULL)){
    auxx2=raizz->reconsulta;
    pocisionar2();
    }
    } else {
    cout<<"Error en el pago, su valor no es el indicado"<<endl;
}
return 0;
}
int registrar_fecha(){
aux=(struct paciente *)malloc (sizeof(struct paciente));
aux->der=aux->izq=NULL;
cout<<"Digita la fecha de nacimiento : ";
cin>>aux->anho;
if (raiz==NULL){
raiz=aux;
aux=NULL;
free(aux);
}else{aux2=raiz;
pocisionar();
}
return 0;
}
int Ordenamiento(pago *recur){
    cout<<"Valor cancelado :"<<recur->pag<<endl;
    if(recur->pagiz!=NULL)
    Ordenamiento(recur->pagiz);
    if(recur->pagoder!=NULL)
    Ordenamiento(recur->pagoder);
    return 0;
}
int preorden(paciente *recursive){
    cout<<"Anho :"<<recursive->anho<<endl;
    if(recursive->izq!=NULL)
    preorden(recursive->izq);
    if(recursive->der!=NULL)
    preorden(recursive->der);
    return 0;
}
int datosxpaciente(pago *val,paciente *anh){
cout<<"El cliente: ";
cout<<anh->anho;
aux=aux->sig; 
cout<<" Pago: ";
cout<<val->pag;
auxx=auxx->sig;
cout<<endl;
return 0;
}
int recorridototal(){
    auxx=raizz->consultagen;
    aux=raiz;
    if((auxx!=NULL)&&(aux!=NULL)){
        datosxpaciente(auxx,aux); 
    }
   return 0;
}
int arbolconsul(){
auxx=raizz->consultagen;
    if (auxx!=NULL){
        Ordenamiento(auxx);
    }
 return 0;  
}
int arbolodontologia(){
auxx=raizz->odontologia;
    if (auxx!=NULL){
        Ordenamiento(auxx);
    }
 return 0;  
}
int arbolreconsulta(){
auxx=raizz->reconsulta;
    if (auxx!=NULL){
        Ordenamiento(auxx);
    }
 return 0;  
}
int recorer_arbolfec(){
aux=raiz;
    if (aux!=NULL){
        preorden(aux);
    }
 return 0;
}
int main(){
    raizz = (struct nodoraiz*) malloc (sizeof(struct nodoraiz*));
    raizz->consultagen= NULL;
    raizz->odontologia = NULL;
    raizz->reconsulta=NULL;
    int opc=0;    
    do {
        cout<<"Bienvenido a la base de datos del hospital San buenaventura"<<endl;
        cout<<"¿Que Accion deseas realizar?"<<endl;
        cout<<"1. Registrar Pasajero"<<endl;
        cout<<"2. Registrar Pagos realizados"<<endl;
        cout<<"3. recorer arbol pago x consulta general"<<endl; 
        cout<<"4. recorrer arbol pago Odontologia"<<endl; 
        cout<<"5. recorrer arbol pago x Re-consulta"<<endl;
        cout<<"6. recorrer arbol pasajero"<<endl; 
        cout<<"7. Mostrar pagos de los pacientes"<<endl;   
        cout<<"8. Salir"<<endl;
        cin>>opc;
        switch (opc)
        {
            case 1: registrar_fecha();break;
            case 2: registrar_pago();break;
            case 3: arbolconsul();break;
            case 4: arbolodontologia();break;
            case 5: arbolreconsulta();break;
            case 6: recorer_arbolfec();break;
            case 7: recorridototal();break;
        }
    }while(opc!=8);
 return 0;   
}
